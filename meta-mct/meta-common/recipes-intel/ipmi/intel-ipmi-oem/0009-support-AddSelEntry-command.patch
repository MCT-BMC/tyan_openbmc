From c8fe8b544152be420345ac3ade0d53e0411bbb91 Mon Sep 17 00:00:00 2001
From: Ray Lue <ray.lue@mic.com.tw>
Date: Sun, 10 Nov 2019 18:20:09 +0800
Subject: [PATCH] support-AddSelEntry-command

---
 src/storagecommands.cpp | 47 +++++++++++++++++++++++++++++++++++++----
 1 file changed, 43 insertions(+), 4 deletions(-)
 mode change 100644 => 100755 src/storagecommands.cpp

diff --git a/src/storagecommands.cpp b/src/storagecommands.cpp
old mode 100644
new mode 100755
index 890b895..3cf3449
--- a/src/storagecommands.cpp
+++ b/src/storagecommands.cpp
@@ -819,7 +819,7 @@ ipmi::RspType<uint16_t, // Next Record ID
         return ipmi::responseUnspecifiedError();
     }
 
-    if (recordType == intel_oem::ipmi::sel::systemEvent)
+    if (recordType == intel_oem::ipmi::sel::systemEvent && targetEntryFields.size() > 4)
     {
         // Get the timestamp
         std::tm timeStruct = {};
@@ -883,8 +883,10 @@ ipmi::RspType<uint16_t, // Next Record ID
             systemEventType{timestamp, generatorID, evmRev, sensorType,
                             sensorNum, eventType, eventDir, eventData});
     }
-    else if (recordType >= intel_oem::ipmi::sel::oemTsEventFirst &&
-             recordType <= intel_oem::ipmi::sel::oemTsEventLast)
+    else if ((recordType >= intel_oem::ipmi::sel::oemTsEventFirst &&
+             recordType <= intel_oem::ipmi::sel::oemTsEventLast) ||
+             targetEntryFields.size() == 4
+            )
     {
         // Get the timestamp
         std::tm timeStruct = {};
@@ -921,6 +923,13 @@ ipmi::RspType<uint16_t, // Next Record ID
     return ipmi::responseUnspecifiedError();
 }
 
+
+static constexpr char const* ipmiSELService =    "xyz.openbmc_project.Logging.IPMI";
+static constexpr char const* ipmiSELPath = "/xyz/openbmc_project/Logging/IPMI";
+static constexpr char const* ipmiSELAddInterface = "xyz.openbmc_project.Logging.IPMI";
+
+static const std::string ipmiSELAddMessage = "SEL Entry";
+
 ipmi::RspType<uint16_t> ipmiStorageAddSELEntry(
     uint16_t recordID, uint8_t recordType, uint32_t timestamp,
     uint16_t generatorID, uint8_t evmRev, uint8_t sensorType, uint8_t sensorNum,
@@ -937,7 +946,37 @@ ipmi::RspType<uint16_t> ipmiStorageAddSELEntry(
         recordID, recordType, timestamp, generatorID, evmRev, sensorType,
         sensorNum, eventType, eventData1, eventData2, eventData3);
 
-    uint16_t responseID = 0xFFFF;
+//mitac start: add to sel 
+    //log SEL
+    std::vector<uint8_t> eventData(9, 0xFF);
+    eventData[0] = generatorID;
+    eventData[1] = generatorID >> 8;
+    eventData[2] = evmRev;
+    eventData[3] = sensorType;
+    eventData[4] = sensorNum;
+    eventData[5] = eventType;
+    eventData[6] = eventData1;
+    eventData[7] = eventData2;
+    eventData[8] = eventData3; 
+
+    std::shared_ptr<sdbusplus::asio::connection> bus = getSdBus();                   
+    sdbusplus::message::message writeSEL = bus->new_method_call(
+        ipmiSELService, ipmiSELPath, ipmiSELAddInterface, "IpmiSelAddOem");
+    writeSEL.append(ipmiSELAddMessage,  eventData, recordType);
+
+    uint16_t responseID = 0xFFFF;                
+    try
+    {
+        auto ret = bus->call(writeSEL);
+        ret.read(responseID);
+    }
+    catch (sdbusplus::exception_t& e)
+    {
+        std::cerr << "call IpmiSelAdd failed\n";
+    }   
+//mitac end
+        
+
     return ipmi::responseSuccess(responseID);
 }
 
