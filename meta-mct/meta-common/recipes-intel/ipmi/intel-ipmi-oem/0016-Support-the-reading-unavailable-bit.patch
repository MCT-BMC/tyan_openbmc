From 1e00b446d02d63276f92b0821af7476c3aeec5c7 Mon Sep 17 00:00:00 2001
From: "wendy.shi" <wendy.shi@mic.com.tw>
Date: Fri, 27 Dec 2019 14:03:19 +0800
Subject: [PATCH] Support-the-reading-unavailable-bit

---
 src/sensorcommands.cpp | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/sensorcommands.cpp b/src/sensorcommands.cpp
index 0cf9e5e..cbe42f8 100755
--- a/src/sensorcommands.cpp
+++ b/src/sensorcommands.cpp
@@ -415,13 +415,15 @@ ipmi::RspType<uint8_t, uint8_t, uint8_t, std::optional<uint8_t>>
     auto sensorObject = sensorMap.find("xyz.openbmc_project.Sensor.Value");
 
     if (sensorObject == sensorMap.end() ||
-        sensorObject->second.find("Value") == sensorObject->second.end())
+        sensorObject->second.find("Value") == sensorObject->second.end() ||
+        sensorObject->second.find("InvalidValue") == sensorObject->second.end())
     {
         return ipmi::responseResponseError();
     }
     auto &valueVariant = sensorObject->second["Value"];
     double reading = std::visit(VariantToDoubleVisitor(), valueVariant);
 
+    auto invalidValue = sensorObject->second.find("InvalidValue");
     double max = 0;
     double min = 0;
     getSensorMaxMin(sensorMap, max, min);
@@ -443,6 +445,11 @@ ipmi::RspType<uint8_t, uint8_t, uint8_t, std::optional<uint8_t>>
         static_cast<uint8_t>(IPMISensorReadingByte2::sensorScanningEnable);
     operation |=
         static_cast<uint8_t>(IPMISensorReadingByte2::eventMessagesEnable);
+    if (std::get<bool>(invalidValue->second) == true)
+    {
+        operation |=
+            static_cast<uint8_t>(IPMISensorReadingByte2::readingStateUnavailable);
+    }
 
     uint8_t thresholds = 0;
 
